scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "EUP",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## International Interactions
data_dart <- data
data_dart <- filter(data_dart, journal_name == "International Interactions")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
II <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "II",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Journal of Conflict Resolution
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Journal Of Conflict Resolution")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
JCR <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "JCR",
x = "", y = "Percent") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Journal of European Public Policy
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Journal Of European Public Policy")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
JEPP <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "JEPP",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Journal of Peace Research
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Journal Of Peace Research")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
JPR <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "JPR",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Party Politics
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Party Politics")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
PP <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "PP",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Political Analysis
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Political Analysis")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
PA <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "PA",
x = "", y = "Percent") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Political Behavior
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Political Behavior")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
PB <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "PB",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Political Science Research and Methods
data_dart <- data
data_dart <- filter(data_dart, journal_name == "Political Science Research And Methods")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
PSRM <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "PSRM",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## The Journal of Politics
data_dart <- data
data_dart <- filter(data_dart, journal_name == "The Journal Of Politics")
dart_time <- CrossTable(data_dart$published_print_year, data_dart$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time <- data.table(dart_time$prop.row)
colnames(dart_time) <- c("year", "od_bool", "percent")
dart_time <-  filter(dart_time, od_bool == "Open Data")
dart_time$percent <- c(dart_time$percent*100)
JoP <- ggplot(dart_time, aes(x=year, y=percent, group = 1)) + geom_line() +
geom_vline(data=dart_time, aes(xintercept = c("2016")), color = "red", linetype = "dotted") +
scale_y_continuous(breaks = seq(0, 100, by = 50), limits = c(0,100)) +
labs(title = "JoP",
x = "", y = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 7)) +
theme(plot.title = element_text(hjust = 0.5))
## Graph all papers
grid <- grid.arrange(AJPS, APSR, BJPS, CMPS, CPS, EJPR, EUP, II, JCR,
JEPP, JoP, JPR, PA, PB, PP, PSRM, nrow = 4)
ggsave("dart_grid.png",
plot = grid,
width = 10,
height = 7,
limitsize = FALSE)
## DART signatories
### Total SI papers with OD in DART journals
dart_time_all <- data
dart_time_all <- dart_time_all %>%
filter(dart_time_all$dart_year == 2016)
dart_time_all_od_stat <- CrossTable(dart_time_all$journal_name, dart_time_all$od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
### Total papers per journal before and after
dart_time_all <- CrossTable(data_dart$journal_name, data_dart$dart_bool,
prop.chisq = FALSE, missing.include = FALSE)
dart_time_all <- data.table(dart_time_all$t)
colnames(dart_time_all) <- c("year", "od_bool_0", "total_0")
dart_time_all_1 <-  filter(dart_time_all, od_bool_0 == 1)
colnames(dart_time_all_1) <- c("year", "od_bool_1", "total_1")
dart_time_all <-  filter(dart_time_all, od_bool_0 == 0)
dart_time_all <- merge.data.table(dart_time_all, dart_time_all_1)
dart_time_all <- subset(dart_time_all, select = -c(od_bool_0, od_bool_1))
dart_time_all <-  filter(dart_time_all, total_0 != 0)
library(dplyr)
library(tidyverse)
library(rbenchmark)
library(tidyr)
library(ggplot2)
library(gmodels)
library(data.table)
library(gridExtra)
library(glue)
library(magrittr)
here <- rprojroot::find_rstudio_root_file()
data <- read.csv(glue("{here}/output/109k_papers_all_coded_for_pub1.csv"))
library(dplyr)
library(tidyverse)
library(rbenchmark)
library(tidyr)
library(ggplot2)
library(gmodels)
library(data.table)
library(gridExtra)
library(glue)
library(magrittr)
here <- rprojroot::find_rstudio_root_file()
data <- read.csv(glue("{here}/output/109k_papers_all_coded_for_pub1.csv"))
# Edit dataset variables ----
## Edit variables for SI and DA
data$od_stat_bool <- ifelse(data$stat_bool!=1, NA,
ifelse(data$od_bool == 1, 1, 0))
data$od_stat_bool <- recode_factor(data$od_stat_bool, "1" = "Open Data",
"0" = "No Data")
data$od_data_bool <- ifelse(data$data_bool!=1, NA,
ifelse(data$od_bool == 1, 1, 0))
data$journal_name <- factor(data$journal_name)
## Edit variables for preregistration
data$prereg_bool <- ifelse(data$exp_bool !=1, NA,
ifelse(data$prereg_score == 2, 1, 0))
data$prereg_bool <- recode_factor(data$prereg_bool, "1" = "Preregistered",
"0" = "Not preregistered")
# Graph stat OD over time ----
## Graph total stat_bool papers for each year
## Note just use stat_bool instead of od_stat_bool!
od_stat_summary <- with(data, CrossTable(published_print_year, od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE))
stat_total <- data.table(od_stat_summary$t)
colnames(stat_total) <- c("year", "od_bool", "total")
stat_total_od <- stat_total %>%
filter(stat_total$od_bool == "Open Data")
colnames(stat_total_od) <- c("year", "od_bool", "od_total")
stat_total_nood <- stat_total %>%
filter(stat_total$od_bool == "No Data")
colnames(stat_total_nood) <- c("year", "od_bool", "nood_total")
stat_total_od <- subset(stat_total_od, select = -c(od_bool))
stat_total_nood <- subset(stat_total_nood, select = -c(od_bool))
stat_total_merge <- merge.data.table(stat_total_od, stat_total_nood)
stat_total_merge$total_stat_bool <- c(stat_total_merge$od_total+stat_total_merge$nood_total)
ggplot(stat_total_merge, aes(x=year, y=total_stat_bool, group = 1)) +
geom_bar(position = 'dodge', stat="identity", fill = "grey") +
scale_y_continuous(breaks = seq(0, 3000, by = 500), limits = c(0,3000)) +
labs(title = "Total statistical inference papers by year",
x = "Year of publication", y = "Number of statistical inference papers") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
## Graph OD for stat_bool
od_stat_summary <- with(data, CrossTable(published_print_year, od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE))
od_percentage <- data.table(od_stat_summary$prop.row)
colnames(od_percentage) <- c("year", "od_bool", "percent")
od_perc_filtered <- od_percentage %>%
filter(od_percentage$od_bool == "Open Data")
od_perc_filtered$percent <- c(od_perc_filtered$percent*100)
ggplot(od_perc_filtered, aes(x=year, y=percent, group = 1)) + geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data",
x = "Year of publication", y = "Percent") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
## Merge stat_total_merge and od_perc_filtered
ggplot(data=od_perc_filtered, aes(x=year, y=percent, group = 1)) +
geom_bar(data = stat_total_merge, aes(x=year, y=total_stat_bool/30, group = 1),
position = 'dodge', stat="identity", fill = "grey92") +
geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 20), limits = c(0, 100),
sec.axis = sec_axis(~ . *30, name = "Total number of papers")) +
labs(title = "",
x = "Year of publication", y = "Percent", colour = "") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")
## Graph stat OD over time by field (PS, IR)
### PS
od_stat_bool_ps <- data.table(data$published_print_year, data$od_stat_bool, data$ps_bool)
colnames(od_stat_bool_ps) <- c("year", "percent", "ps")
od_stat_bool_ps <- filter(od_stat_bool_ps, ps == 1)
od_stat_summary_ps <- with(od_stat_bool_ps, CrossTable(year, percent,
prop.chisq = FALSE, missing.include = FALSE))
od_percentage_ps <- data.table(od_stat_summary_ps$prop.row)
colnames(od_percentage_ps) <- c("year", "od_bool", "percent")
od_perc_filtered_ps <- od_percentage_ps %>%
filter(od_percentage_ps$od_bool == "Open Data")
od_perc_filtered_ps$percent <- c(od_perc_filtered_ps$percent*100)
ggplot(od_perc_filtered_ps, aes(x=year, y=percent, group = 1)) + geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data in political science journals",
x = "Year of publication", y = "Percent") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(tidyverse)
library(rbenchmark)
library(tidyr)
library(ggplot2)
library(gmodels)
library(data.table)
library(gridExtra)
library(glue)
library(magrittr)
here <- rprojroot::find_rstudio_root_file()
data <- read.csv(glue("{here}/output/109k_papers_all_coded_for_pub1.csv"))
# Edit dataset variables ----
## Edit variables for SI and DA
data$od_stat_bool <- ifelse(data$stat_bool!=1, NA,
ifelse(data$od_bool == 1, 1, 0))
data$od_stat_bool <- recode_factor(data$od_stat_bool, "1" = "Open Data",
"0" = "No Data")
data$od_data_bool <- ifelse(data$data_bool!=1, NA,
ifelse(data$od_bool == 1, 1, 0))
data$journal_name <- factor(data$journal_name)
## Edit variables for preregistration
data$prereg_bool <- ifelse(data$exp_bool !=1, NA,
ifelse(data$prereg_score == 2, 1, 0))
data$prereg_bool <- recode_factor(data$prereg_bool, "1" = "Preregistered",
"0" = "Not preregistered")
# Graph stat OD over time ----
## Graph total stat_bool papers for each year
## Note just use stat_bool instead of od_stat_bool!
od_stat_summary <- with(data, CrossTable(published_print_year, od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE))
stat_total <- data.table(od_stat_summary$t)
colnames(stat_total) <- c("year", "od_bool", "total")
stat_total_od <- stat_total %>%
filter(stat_total$od_bool == "Open Data")
colnames(stat_total_od) <- c("year", "od_bool", "od_total")
stat_total_nood <- stat_total %>%
filter(stat_total$od_bool == "No Data")
colnames(stat_total_nood) <- c("year", "od_bool", "nood_total")
stat_total_od <- subset(stat_total_od, select = -c(od_bool))
stat_total_nood <- subset(stat_total_nood, select = -c(od_bool))
stat_total_merge <- merge.data.table(stat_total_od, stat_total_nood)
stat_total_merge$total_stat_bool <- c(stat_total_merge$od_total+stat_total_merge$nood_total)
ggplot(stat_total_merge, aes(x=year, y=total_stat_bool, group = 1)) +
geom_bar(position = 'dodge', stat="identity", fill = "grey") +
scale_y_continuous(breaks = seq(0, 3000, by = 500), limits = c(0,3000)) +
labs(title = "Total statistical inference papers by year",
x = "Year of publication", y = "Number of statistical inference papers") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
## Graph OD for stat_bool
od_stat_summary <- with(data, CrossTable(published_print_year, od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE))
od_percentage <- data.table(od_stat_summary$prop.row)
colnames(od_percentage) <- c("year", "od_bool", "percent")
od_perc_filtered <- od_percentage %>%
filter(od_percentage$od_bool == "Open Data")
od_perc_filtered$percent <- c(od_perc_filtered$percent*100)
ggplot(od_perc_filtered, aes(x=year, y=percent, group = 1)) + geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data",
x = "Year of publication", y = "Percent") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
## Merge stat_total_merge and od_perc_filtered
ggplot(data=od_perc_filtered, aes(x=year, y=percent, group = 1)) +
geom_bar(data = stat_total_merge, aes(x=year, y=total_stat_bool/30, group = 1),
position = 'dodge', stat="identity", fill = "grey92") +
geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 20), limits = c(0, 100),
sec.axis = sec_axis(~ . *30, name = "Total number of papers")) +
labs(title = "",
x = "Year of publication", y = "Percent", colour = "") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")
## Graph stat OD over time by field (PS, IR)
### PS
od_stat_bool_ps <- data.table(data$published_print_year, data$od_stat_bool, data$ps_bool)
colnames(od_stat_bool_ps) <- c("year", "percent", "ps")
od_stat_bool_ps <- filter(od_stat_bool_ps, ps == 1)
od_stat_summary_ps <- with(od_stat_bool_ps, CrossTable(year, percent,
prop.chisq = FALSE, missing.include = FALSE))
od_percentage_ps <- data.table(od_stat_summary_ps$prop.row)
colnames(od_percentage_ps) <- c("year", "od_bool", "percent")
od_perc_filtered_ps <- od_percentage_ps %>%
filter(od_percentage_ps$od_bool == "Open Data")
od_perc_filtered_ps$percent <- c(od_perc_filtered_ps$percent*100)
ggplot(od_perc_filtered_ps, aes(x=year, y=percent, group = 1)) + geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data in political science journals",
x = "Year of publication", y = "Percent") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
### IR
od_stat_bool_ir <- data.table(data$published_print_year, data$od_stat_bool, data$ir_bool)
colnames(od_stat_bool_ir) <- c("year", "percent", "ir")
od_stat_bool_ir <- filter(od_stat_bool_ir, ir == 1)
od_stat_summary_ir <- with(od_stat_bool_ir, CrossTable(year, percent,
prop.chisq = FALSE, missing.include = FALSE))
od_percentage_ir <- data.table(od_stat_summary_ir$prop.row)
colnames(od_percentage_ir) <- c("year", "od_bool", "percent")
od_perc_filtered_ir <- od_percentage_ir %>%
filter(od_percentage_ir$od_bool == "Open Data")
od_perc_filtered_ir$percent <- c(od_perc_filtered_ir$percent*100)
ggplot(od_perc_filtered_ir, aes(x=year, y=percent, group = 1)) + geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data in international relations journals",
x = "Year of publication", y = "Percent") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
### Merge PS and IR graphs (put label text on graph)
ggplot() +
geom_line(data=od_perc_filtered_ps, aes(x=year, y=percent, group = 1, colour = 'Political Science')) +
geom_line(data=od_perc_filtered_ir, aes(x=year, y=percent, group = 1, colour = 'International Relations')) +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100)) +
labs(title = "Percentage of statistical inference papers with open data by field",
x = "Year of publication", y = "Percent", colour = "") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")
### Combined with stat_total_merge
#### Title: Open data in statistical inference papers
#### Define label titles from quantmod
g1 <- ggplot() +
geom_bar(data = stat_total_merge, aes(x=year, y=total_stat_bool/30, group = 1),
position = 'dodge', stat="identity", fill = "grey92") +
geom_line(data=od_perc_filtered_ps, aes(x=year, y=percent,
linetype = "Political science",
group = 1)) +
geom_line(data=od_perc_filtered_ir, aes(x=year, y=percent,
linetype = "International relations",
group = 1)) +
scale_y_continuous(breaks = seq(0, 100, by = 20), limits = c(0, 100), expand = c(0, 0),
name = "Percentage with open data",
sec.axis = sec_axis(~ . *30, name = "Total number of papers")) +
scale_color_manual(
values = c("Political science" = "black", "International relations" = "black")) +
scale_linetype_manual("",values=c("Political science"=1,"International relations"=2)) +
labs(title = "",
x = "Year of publication", y = "Percent", colour = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 8)) +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")
####  geom_text(aes(x = "2021", y = 32, label = "PS")) +
####  geom_text(aes(x = "2021", y = 18, label = "IR")) +
# Explore OD by journals ----
## Edit journal titles that were not abbreviated
od_stat_journals <- with(data, CrossTable(abbrev_name, od_stat_bool,
prop.chisq = FALSE, missing.include = FALSE))
## Remove journals that have no SI papers
od_stat_journals_zeros <- data.table(od_stat_journals$t)
colnames(od_stat_journals_zeros) <- c("journal_name", "od_bool", "total")
od_stat_journals_zeros <- od_stat_journals_zeros %>%
filter(od_stat_journals_zeros$od_bool == "No Data")
od_stat_journals_zeros$total <- ifelse(od_stat_journals_zeros$total != 0, 1, 2)
od_stat_journals_zeros <- subset(od_stat_journals_zeros, select = -c(od_bool))
## Create var with total stat_bool papers per journal
od_stat_journals_zeros_filtered <- CrossTable(data$abbrev_name, data$stat_bool,
prop.chisq = FALSE, missing.include = FALSE)
od_stat_journals_zeros_filtered <- data.table(od_stat_journals_zeros_filtered$t)
colnames(od_stat_journals_zeros_filtered) <- c("journal_name", "od_bool", "total_stat")
od_stat_journals_zeros_filtered <- filter(od_stat_journals_zeros_filtered, od_bool==1)
od_stat_journals_zeros_filtered <- subset(od_stat_journals_zeros_filtered, select = -c(od_bool))
od_stat_journals_zeros_filtered <- merge.data.table(od_stat_journals_zeros_filtered,
od_stat_journals_zeros)
od_stat_journals_zeros_filtered <- filter(od_stat_journals_zeros_filtered, total!=2)
## Graph OD by journals
od_perc_journals <- data.table(od_stat_journals$prop.row)
colnames(od_perc_journals) <- c("journal_name", "od_bool", "percent")
od_journal_filtered <- od_perc_journals %>%
filter(od_perc_journals$od_bool == "Open Data")
od_journal_filtered <- merge.data.table(od_journal_filtered, od_stat_journals_zeros_filtered, by = "journal_name")
od_journal_filtered$percent <- c(od_journal_filtered$percent*100)
g3 <- ggplot(od_journal_filtered, aes(x=journal_name, y=percent, group = 1)) + geom_bar(stat="identity") +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100), expand = c(0, 0)) +
geom_text(
aes(label = total_stat), position=position_dodge(width=0.9),
colour = "black", size = 2.25,
vjust = -0.25) +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 8)) +
labs(title = "",
x = "Journal", y = "Percent") +
theme(plot.title = element_text(hjust = 0.5))
### Percentage of statistical inference papers with open data by journal (2010 - 2021)
## Crosstab od_stat_bool for each journal type
## Filter OD graphs by journal for papers with over 200 SI papers
od_journal_filtered <- filter(od_journal_filtered, total_stat >=200)
g4 <- ggplot(od_journal_filtered, aes(x=journal_name, y=percent, group = 1)) + geom_bar(stat="identity") +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100), expand = c(0, 0)) +
geom_text(
aes(label = total_stat), position=position_dodge(width=0.9),
colour = "black", size = 3,
vjust = -0.25) +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1)) +
labs(title = "",
x = "Journal", y = "Percent") +
theme(plot.title = element_text(hjust = 0.5))
g4
g3
g2
g1
ggplot() +
geom_bar(data = stat_total_merge, aes(x=year, y=total_stat_bool/30, group = 1),
position = 'dodge', stat="identity", fill = "grey92") +
geom_line(data=od_perc_filtered_ps, aes(x=year, y=percent,
linetype = "Political science",
group = 1)) +
geom_line(data=od_perc_filtered_ir, aes(x=year, y=percent,
linetype = "International relations",
group = 1)) +
scale_y_continuous(breaks = seq(0, 100, by = 20), limits = c(0, 100), expand = c(0, 0),
name = "% with open data",
sec.axis = sec_axis(~ . *30, name = "Total number of papers")) +
scale_color_manual(
values = c("Political science" = "black", "International relations" = "black")) +
scale_linetype_manual("",values=c("Political science"=1,"International relations"=2)) +
labs(title = "",
x = "Year of publication", y = "Percent", colour = "") +
theme_classic() +
theme(axis.text.x = element_text(angle = 55, hjust=1, size = 8)) +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")
